import math

tumor = "SRR2842672"
normal = "SRR2088062"
normal_reads_n = 262578416
tumor_reads_n = 231234481
percentages = [5, 20]

def get_sample_n(percentage):
    f = float(percentage) / 100
    n = normal_reads_n
    # access with tumor: [0], normal: [1]
    return (int(f * n), int((1 - f) * n))


rule all:
    input:
        expand("dataset/mix{percentage}/{file}", percentage=percentages, file=["truth.vcf", "truth.nochr.vcf", "confident-regions.bed"]),
        expand("dataset/mix{percentage}/{tissue}_{read}.fastq", percentage=percentages, read=[1, 2], tissue=["tumor", "normal"])

rule get_reads:
    output:
        "srr/{accession}_1.fastq",
        "srr/{accession}_2.fastq"
    conda:
        "envs/sra-tools.yaml"
    shell:
        "perl -U `which fasterq-dump` {wildcards.accession}"


rule get_eval_kit:
    output:
        directory("CHM-eval.kit")
    shell:
        "curl -L https://github.com/lh3/CHM-eval/releases/download/v0.4/CHM-evalkit-20180221.tar \
    | tar xf -"


rule get_confident_vcf:
    input:
        "CHM-eval.kit"
    output:
        "truth/confident.vcf"
    conda:
        "envs/tools.yaml"
    shell:
        "bedtools intersect -header -a {input}/full.38.vcf.gz -b {input}/full.38.bed.gz > {output}"

rule get_confident_bed:
    input:
        "CHM-eval.kit"
    output:
        "dataset/mix{percentage}/confident-regions.bed"
    shell:
        "gzip -d -c {input}/full.38.bed.gz > {output}"


rule compose_truth:
    input:
        "truth/confident.vcf"
    output:
        "dataset/mix{percentage}/truth.vcf"
    conda:
        "envs/cyvcf2.yaml"
    script:
        "scripts/compose-truth.py"


get_srr_reads = lambda accession: expand("srr/{accession}_{read}.fastq", accession=accession, read=[1,2])


rule mix_reads:
    input:
        normal=get_srr_reads(normal),
        tumor=get_srr_reads(tumor)
    output:
        "dataset/mix{percentage}/tumor_1.fastq",
        "dataset/mix{percentage}/tumor_2.fastq"
    params:
        ns=lambda w: get_sample_n(w.percentage),
        seed=23274
    conda:
        "envs/seqtk.yaml"
    shell:
        "seqtk sample -s{params.seed} {input.normal[0]} {params.ns[1]} > {output[0]}; "
        "seqtk sample -s{params.seed} {input.normal[1]} {params.ns[1]} > {output[1]}; "
        "seqtk sample -s{params.seed} {input.tumor[0]} {params.ns[0]} >> {output[0]}; "
        "seqtk sample -s{params.seed} {input.tumor[1]} {params.ns[0]} >> {output[1]}; "


rule copy_normal:
    input:
        get_srr_reads(normal)
    output:
        "dataset/mix{percentage}/normal_1.fastq",
        "dataset/mix{percentage}/normal_2.fastq"
    shell:
        "cp {input[0]} {output[0]}; "
        "cp {input[1]} {output[1]}"


rule remove_chr:
    input:
        "dataset/mix{percentage}/truth.vcf"
    output:
        "dataset/mix{percentage}/truth.nochr.vcf"
    shell:
        "sed 's/chr//g' {input} > {output}"
